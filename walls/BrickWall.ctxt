#BlueJ class context
comment0.target=BrickWall
comment0.text=\r\n\ A\ Java\ tool\ to\ draw\ brick\ walls\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=wallWidth\ wallHeight
comment1.target=BrickWall(int,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ BrickWall.\r\n\ @param\ rows\ The\ number\ of\ rows\ in\ the\ wall\r\n\ @param\ rowlen\ The\ maximum\ number\ of\ bricks\ in\ a\ row\r\n
comment10.params=
comment10.target=void\ multicolorOff()
comment10.text=\r\n\ Turn\ off\ multicolor\r\n
comment11.params=
comment11.target=void\ decreaseOn()
comment11.text=\r\n\ Turn\ on\ decrease\r\n
comment12.params=
comment12.target=void\ decreaseOff()
comment12.text=\r\n\ Turn\ off\ decrease\r\n
comment13.params=
comment13.target=boolean\ isSymmetryOn()
comment13.text=\r\n\ find\ out\ whether\ symmetry\ is\ on\r\n
comment14.params=
comment14.target=void\ symmetricalOn()
comment14.text=\r\n\ Turn\ on\ symmetry\r\n
comment15.params=
comment15.target=void\ symmetricalOff()
comment15.text=\r\n\ Turn\ off\ symmetry\r\n
comment16.params=colorToFind
comment16.target=void\ isValidColor(java.lang.String)
comment16.text=\r\n\ Check\ whether\ a\ color\ input\ is\ a\ recognised\ color\r\n
comment17.params=colorToFind
comment17.target=Rectangle\ findFirstBrickByColor(java.lang.String)
comment17.text=\r\n\ Return\ the\ first\ brick\ that\ matches\ the\ specified\ color\ to\ find\r\n
comment18.params=colorToFind
comment18.target=java.util.ArrayList\ findBricksByColor(java.lang.String)
comment18.text=\r\n\ Return\ a\ list\ of\ bricks\ which\ match\ the\ specified\ color\ to\ find.\r\n
comment19.params=xCoord\ yCoord
comment19.target=Rectangle\ findBrickAt(int,\ int)
comment19.text=\r\n\ Find\ out\ whether\ a\ rectangle\ exists\ at\ the\ specified\ location\ and\ if\ it\ does\ return\ that\ brick.\r\n
comment2.params=dimensionToFind
comment2.target=int\ getDimension(java.lang.String)
comment20.params=
comment20.target=void\ eraseWall()
comment20.text=\r\n\ Clear\ the\ canvas\r\n
comment21.params=
comment21.target=java.lang.String[]\ getColors()
comment21.text=\r\n\ Accessor\ for\ the\ colors\ array\r\n
comment3.params=
comment3.target=void\ setUpColors()
comment4.params=
comment4.target=void\ draw()
comment4.text=\r\n\ Draw\ the\ wall.\ \ The\ first\ brick\ will\ be\ positioned\ at\ the\ coordinates\ (10,\ 550).\ \ \r\n\ The\ number\ of\ bricks\ in\ a\ row\ is\ specified\ by\ setRowLength().\ \ The\ maximum\ number\ of\ rows\r\n\ is\ specified\ by\ setNumRows().\ \ If\ decrease\ is\ true,\ each\ subsequent\ row\ of\ bricks\ \r\n\ contains\ one\ brick\ less\ than\ the\ previous\ row.\ \ If\ symmetric\ is\ true\ AND\ decrease\ is\ true\ then\r\n\ the\ wall\ is\ pyramid\ shaped.\ \ If\ symmetric\ is\ false\ AND\ decrease\ is\ true\ then\ the\ wall\ is\ shaped\r\n\ like\ a\ right\ angle\ triangle.\r\n
comment5.params=startX\ startY
comment5.target=void\ drawBrick(int,\ int)
comment5.text=\r\n\ Draw\ a\ rectangle\ \r\n
comment6.params=
comment6.target=int\ getCurrentColor()
comment6.text=\r\n\ Return\ the\ current\ color\r\n
comment7.params=startX\ startY\ lengthOfRow
comment7.target=void\ drawRow(int,\ int,\ int)
comment7.text=\r\n\ Draw\ a\ row\ of\ rectangles\r\n
comment8.params=startX\ startY\ lengthOfRow\ numOfRows
comment8.target=void\ drawManyRows(int,\ int,\ int,\ int)
comment8.text=\r\n\ Draw\ a\ stack\ of\ rows\ of\ rectangles\r\n
comment9.params=
comment9.target=void\ multicolorOn()
comment9.text=\r\n\ Turn\ on\ multicolor\r\n
numComments=22
